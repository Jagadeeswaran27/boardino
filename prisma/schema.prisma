// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model test {
  id   String @id @default(cuid())
  name String
}

model User {
  id                   String        @id @default(cuid())
  name                 String
  email                String
  hashedPassword       String?
  image                String?
  authenticationMethod String
  boardsOwned          Board[]       @relation("OwnerBoards")
  assignedTasks        Task[]
  boardMemberships     BoardMember[]
}

model Board {
  id          String        @id @default(cuid())
  name        String
  description String
  createdAt   DateTime      @default(now())
  ownerId     String
  owner       User          @relation("OwnerBoards", fields: [ownerId], references: [id])
  members     BoardMember[]
  columns     Column[]
  tasks       Task[]
}

model BoardMember {
  id      String @id @default(cuid())
  userId  String
  boardId String
  role    Role   @default(VIEWER) // ENUM type for role

  user  User  @relation(fields: [userId], references: [id])
  board Board @relation(fields: [boardId], references: [id])

  @@unique([userId, boardId]) // Prevent duplicate membership
}

model Column {
  id        String   @id @default(cuid())
  name      String
  boardId   String
  board     Board    @relation(fields: [boardId], references: [id])
  createdAt DateTime @default(now())
}

model Task {
  id          String   @id @default(cuid())
  name        String
  description String
  columnId    String?
  assigneeId  String? // optional user assigned to the task
  assignee    User?    @relation(fields: [assigneeId], references: [id])
  dueDate     DateTime
  createdAt   DateTime @default(now())
  boardId     String
  board       Board    @relation(fields: [boardId], references: [id])
}

enum Role {
  OWNER
  EDITOR
  VIEWER
}
